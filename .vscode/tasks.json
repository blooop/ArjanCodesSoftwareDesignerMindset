{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "autoformat",
			"detail": "Use ruff and black to automatically fix and format the code",
			"type": "shell",
			"command": "ruff . --fix && black ."
		},
		{
			"label": "autoformat and commit",
			"detail": "Use ruff and black to automatically fix and format the code and commit changes",
			"type": "shell",
			"dependsOn": [
				"autoformat"
			],
			"command": "git commit -a -m 'autoformatted and ruff --fix all code'"
		},
		{
			"label": "pylint",
			"detail": "Run pylint on files tracked by git",
			"type": "shell",
			"command": "pylint $(git ls-files '*.py') "
		},
		{
			"label": "code coverage",
			"detail": "Run code coverage and print a coverage report, also update coverage.xml for in the in-editor coverage gutter",
			"type": "shell",
			"command": "coverage run -m pytest; coverage xml -o coverage.xml; coverage report -m"
		},
		{
			"label": "code coverage report",
			"detail": "Display the code coverage report. This assumes you have already have a coverage report generated. If not run the code ocverage task",
			"type": "shell",
			"command": "coverage report -m"
		},
		{
			"label": "pytest duration",
			"detail": "Run pytest and track the duration of each test",
			"type": "shell",
			"command": "pytest --durations=0"
		},
		{
			"label": "check CI",
			"detail": "Runs the basic formatting and linting checks performed by CI",
			"type": "shell",
			"dependsOn": [
				"autoformat",
				"pylint",
				"code coverage"
			],
			"dependsOrder": "sequence",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			}
		},
		{
			"label": "flit install",
			"type": "shell",
			"command": "flit install --symlink"
		},
		{
			"label": "flit publish",
			"type": "shell",
			"command": "flit publish"
		},
		{
			"label": "git merge origin main and push",
			"detail": "merge changes from master into the current branch and push",
			"type": "shell",
			"command": "git merge origin main && git push"
		},
		{
			"label": "pull updates from template repo",
			"detail": "Pull any changes from the template repo into this repo by adding it as a remote. The remote is removed at the end of the command.  You may need to resolve merge conflicts",
			"type": "shell",
			"command": "git remote add template https://github.com/blooop/python_template.git; git fetch --all;git checkout main; git pull origin main; git checkout -B feature/update_from_template; git pull; git merge template/main --allow-unrelated-histories -m 'pull changes from remote template'; git remote remove template; git push origin feature/update_from_template"
		},
		{
			"label": "sa: Set Active File",
			"type": "shell",
			"command": "echo ${file} > ${workspaceFolder}/.vscode/active_file.cfg; echo Setting the current file: ${file} as the active file.",
			"problemMatcher": [],
			"group": {
				"kind": "test",
				"isDefault": "True"
			}
		},
		{
			"label": "ra: Run Active File",
			"type": "shell",
			"command": "RUNFILE=$(cat ${workspaceFolder}/.vscode/active_file.cfg); echo Running file: $RUNFILE; python3 $RUNFILE",
			"problemMatcher": [],
			"group": {
				"kind": "build",
				"isDefault": "True"
			}
		}
	]
}