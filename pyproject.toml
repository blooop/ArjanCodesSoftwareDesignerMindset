[project]
name = "arjan_codes_sw_design_mindset"
version = "0.0.1"

authors = [{ name = "Austin Gregg-Smith", email = "blooop@gmail.com" }]
description = "A python package template"
readme = "README.md"

requires-python = ">=3.10"


dependencies = ["numpy>=1.2,<=1.25.2"]

[project.optional-dependencies]
test = [
  "black>=23,<=23.7.0",
  "check-manifest>=0.49,<=0.49",
  "pre-commit>=3.3.3,<=3.3.3",
  "pylint>=2.16,<=2.17.5",
  "pytest-cov>=4.1,<=4.1",
  "pytest-mock>=3.10,<=3.11.1",
  "pytest-runner>=6.0,<=6.0",
  "pytest>=7.4,<=7.4",
  "hypothesis>=6.82,<=6.82.7",
  "ruff>=0.0.280,<=0.0.285",
  "coverage>=7.2.7,<=7.3.0",
]

[project.urls]
Source = "https://github.com/blooop/arjan_codes_sw_design_mindset"
Home = "https://github.com/blooop/arjan_codes_sw_design_mindset"


[tool.flit.module]
name = "arjan_codes_sw_design_mindset"

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"


[tool.pylint]
extension-pkg-whitelist = ["numpy"]
jobs = 16                           #detect number of cores
ignore-paths = [".*official.*"]

[tool.pylint.'MESSAGES CONTROL']
disable = "C,logging-fstring-interpolation,line-too-long,fixme,broad-exception-caught,missing-module-docstring,too-many-instance-attributes,too-few-public-methods,too-many-arguments,too-many-locals,too-many-branches,too-many-statements,use-dict-literal,cyclic-import,duplicate-code,too-many-public-methods,unused-argument,unspecified-encoding"
enable = "no-else-return,consider-using-in"

[tool.black]
line-length = 100

[tool.ruff]
# Never enforce `E501` (line length violations).
#"F841" will auto remove unused variables which is annoying during development, pylint catches this anyway
ignore = ["E501", "E902", "F841"]
exclude = ["**/official/**"]


# Same as Black.
line-length = 100

target-version = "py310"

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401"]


[tool.coverage.run]
omit = ["*/test/*", "__init__.py"]

[tool.coverage.report]
exclude_also = [
  "def __repr__",
  "if False:",
  "if 0:",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "...",
]
